// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: quotes.proto

#ifndef PROTOBUF_INCLUDED_quotes_2eproto
#define PROTOBUF_INCLUDED_quotes_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_quotes_2eproto 

namespace protobuf_quotes_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_quotes_2eproto
namespace quotes {
class Quotes;
class QuotesDefaultTypeInternal;
extern QuotesDefaultTypeInternal _Quotes_default_instance_;
class Quotes_Quote;
class Quotes_QuoteDefaultTypeInternal;
extern Quotes_QuoteDefaultTypeInternal _Quotes_Quote_default_instance_;
}  // namespace quotes
namespace google {
namespace protobuf {
template<> ::quotes::Quotes* Arena::CreateMaybeMessage<::quotes::Quotes>(Arena*);
template<> ::quotes::Quotes_Quote* Arena::CreateMaybeMessage<::quotes::Quotes_Quote>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace quotes {

// ===================================================================

class Quotes_Quote : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:quotes.Quotes.Quote) */ {
 public:
  Quotes_Quote();
  virtual ~Quotes_Quote();

  Quotes_Quote(const Quotes_Quote& from);

  inline Quotes_Quote& operator=(const Quotes_Quote& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Quotes_Quote(Quotes_Quote&& from) noexcept
    : Quotes_Quote() {
    *this = ::std::move(from);
  }

  inline Quotes_Quote& operator=(Quotes_Quote&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Quotes_Quote& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Quotes_Quote* internal_default_instance() {
    return reinterpret_cast<const Quotes_Quote*>(
               &_Quotes_Quote_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Quotes_Quote* other);
  friend void swap(Quotes_Quote& a, Quotes_Quote& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Quotes_Quote* New() const final {
    return CreateMaybeMessage<Quotes_Quote>(NULL);
  }

  Quotes_Quote* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Quotes_Quote>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Quotes_Quote& from);
  void MergeFrom(const Quotes_Quote& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Quotes_Quote* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 price = 1;
  void clear_price();
  static const int kPriceFieldNumber = 1;
  ::google::protobuf::int64 price() const;
  void set_price(::google::protobuf::int64 value);

  // int64 volume = 2;
  void clear_volume();
  static const int kVolumeFieldNumber = 2;
  ::google::protobuf::int64 volume() const;
  void set_volume(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:quotes.Quotes.Quote)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 price_;
  ::google::protobuf::int64 volume_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_quotes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Quotes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:quotes.Quotes) */ {
 public:
  Quotes();
  virtual ~Quotes();

  Quotes(const Quotes& from);

  inline Quotes& operator=(const Quotes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Quotes(Quotes&& from) noexcept
    : Quotes() {
    *this = ::std::move(from);
  }

  inline Quotes& operator=(Quotes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Quotes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Quotes* internal_default_instance() {
    return reinterpret_cast<const Quotes*>(
               &_Quotes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Quotes* other);
  friend void swap(Quotes& a, Quotes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Quotes* New() const final {
    return CreateMaybeMessage<Quotes>(NULL);
  }

  Quotes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Quotes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Quotes& from);
  void MergeFrom(const Quotes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Quotes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Quotes_Quote Quote;

  // accessors -------------------------------------------------------

  // repeated .quotes.Quotes.Quote quote = 1;
  int quote_size() const;
  void clear_quote();
  static const int kQuoteFieldNumber = 1;
  ::quotes::Quotes_Quote* mutable_quote(int index);
  ::google::protobuf::RepeatedPtrField< ::quotes::Quotes_Quote >*
      mutable_quote();
  const ::quotes::Quotes_Quote& quote(int index) const;
  ::quotes::Quotes_Quote* add_quote();
  const ::google::protobuf::RepeatedPtrField< ::quotes::Quotes_Quote >&
      quote() const;

  // @@protoc_insertion_point(class_scope:quotes.Quotes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::quotes::Quotes_Quote > quote_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_quotes_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Quotes_Quote

// int64 price = 1;
inline void Quotes_Quote::clear_price() {
  price_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Quotes_Quote::price() const {
  // @@protoc_insertion_point(field_get:quotes.Quotes.Quote.price)
  return price_;
}
inline void Quotes_Quote::set_price(::google::protobuf::int64 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:quotes.Quotes.Quote.price)
}

// int64 volume = 2;
inline void Quotes_Quote::clear_volume() {
  volume_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Quotes_Quote::volume() const {
  // @@protoc_insertion_point(field_get:quotes.Quotes.Quote.volume)
  return volume_;
}
inline void Quotes_Quote::set_volume(::google::protobuf::int64 value) {
  
  volume_ = value;
  // @@protoc_insertion_point(field_set:quotes.Quotes.Quote.volume)
}

// -------------------------------------------------------------------

// Quotes

// repeated .quotes.Quotes.Quote quote = 1;
inline int Quotes::quote_size() const {
  return quote_.size();
}
inline void Quotes::clear_quote() {
  quote_.Clear();
}
inline ::quotes::Quotes_Quote* Quotes::mutable_quote(int index) {
  // @@protoc_insertion_point(field_mutable:quotes.Quotes.quote)
  return quote_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::quotes::Quotes_Quote >*
Quotes::mutable_quote() {
  // @@protoc_insertion_point(field_mutable_list:quotes.Quotes.quote)
  return &quote_;
}
inline const ::quotes::Quotes_Quote& Quotes::quote(int index) const {
  // @@protoc_insertion_point(field_get:quotes.Quotes.quote)
  return quote_.Get(index);
}
inline ::quotes::Quotes_Quote* Quotes::add_quote() {
  // @@protoc_insertion_point(field_add:quotes.Quotes.quote)
  return quote_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::quotes::Quotes_Quote >&
Quotes::quote() const {
  // @@protoc_insertion_point(field_list:quotes.Quotes.quote)
  return quote_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace quotes

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_quotes_2eproto

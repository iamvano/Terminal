// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: quotes.proto

#include "quotes.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_quotes_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_quotes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Quotes_Quote;
}  // namespace protobuf_quotes_2eproto
namespace quotes {
class Quotes_QuoteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Quotes_Quote>
      _instance;
} _Quotes_Quote_default_instance_;
class QuotesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Quotes>
      _instance;
} _Quotes_default_instance_;
}  // namespace quotes
namespace protobuf_quotes_2eproto {
static void InitDefaultsQuotes_Quote() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::quotes::_Quotes_Quote_default_instance_;
    new (ptr) ::quotes::Quotes_Quote();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::quotes::Quotes_Quote::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Quotes_Quote =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQuotes_Quote}, {}};

static void InitDefaultsQuotes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::quotes::_Quotes_default_instance_;
    new (ptr) ::quotes::Quotes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::quotes::Quotes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Quotes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsQuotes}, {
      &protobuf_quotes_2eproto::scc_info_Quotes_Quote.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Quotes_Quote.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Quotes.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::quotes::Quotes_Quote, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::quotes::Quotes_Quote, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::quotes::Quotes_Quote, volume_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::quotes::Quotes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::quotes::Quotes, quote_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::quotes::Quotes_Quote)},
  { 7, -1, sizeof(::quotes::Quotes)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::quotes::_Quotes_Quote_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::quotes::_Quotes_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "quotes.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014quotes.proto\022\006quotes\"U\n\006Quotes\022#\n\005quot"
      "e\030\001 \003(\0132\024.quotes.Quotes.Quote\032&\n\005Quote\022\r"
      "\n\005price\030\001 \001(\003\022\016\n\006volume\030\002 \001(\003b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 117);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "quotes.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_quotes_2eproto
namespace quotes {

// ===================================================================

void Quotes_Quote::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Quotes_Quote::kPriceFieldNumber;
const int Quotes_Quote::kVolumeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Quotes_Quote::Quotes_Quote()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_quotes_2eproto::scc_info_Quotes_Quote.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:quotes.Quotes.Quote)
}
Quotes_Quote::Quotes_Quote(const Quotes_Quote& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&price_, &from.price_,
    static_cast<size_t>(reinterpret_cast<char*>(&volume_) -
    reinterpret_cast<char*>(&price_)) + sizeof(volume_));
  // @@protoc_insertion_point(copy_constructor:quotes.Quotes.Quote)
}

void Quotes_Quote::SharedCtor() {
  ::memset(&price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&volume_) -
      reinterpret_cast<char*>(&price_)) + sizeof(volume_));
}

Quotes_Quote::~Quotes_Quote() {
  // @@protoc_insertion_point(destructor:quotes.Quotes.Quote)
  SharedDtor();
}

void Quotes_Quote::SharedDtor() {
}

void Quotes_Quote::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Quotes_Quote::descriptor() {
  ::protobuf_quotes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_quotes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Quotes_Quote& Quotes_Quote::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_quotes_2eproto::scc_info_Quotes_Quote.base);
  return *internal_default_instance();
}


void Quotes_Quote::Clear() {
// @@protoc_insertion_point(message_clear_start:quotes.Quotes.Quote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&volume_) -
      reinterpret_cast<char*>(&price_)) + sizeof(volume_));
  _internal_metadata_.Clear();
}

bool Quotes_Quote::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:quotes.Quotes.Quote)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 price = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 volume = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &volume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:quotes.Quotes.Quote)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:quotes.Quotes.Quote)
  return false;
#undef DO_
}

void Quotes_Quote::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:quotes.Quotes.Quote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 price = 1;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->price(), output);
  }

  // int64 volume = 2;
  if (this->volume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->volume(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:quotes.Quotes.Quote)
}

::google::protobuf::uint8* Quotes_Quote::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:quotes.Quotes.Quote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 price = 1;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->price(), target);
  }

  // int64 volume = 2;
  if (this->volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->volume(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:quotes.Quotes.Quote)
  return target;
}

size_t Quotes_Quote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:quotes.Quotes.Quote)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 price = 1;
  if (this->price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->price());
  }

  // int64 volume = 2;
  if (this->volume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->volume());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Quotes_Quote::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:quotes.Quotes.Quote)
  GOOGLE_DCHECK_NE(&from, this);
  const Quotes_Quote* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Quotes_Quote>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:quotes.Quotes.Quote)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:quotes.Quotes.Quote)
    MergeFrom(*source);
  }
}

void Quotes_Quote::MergeFrom(const Quotes_Quote& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:quotes.Quotes.Quote)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.volume() != 0) {
    set_volume(from.volume());
  }
}

void Quotes_Quote::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:quotes.Quotes.Quote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Quotes_Quote::CopyFrom(const Quotes_Quote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:quotes.Quotes.Quote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Quotes_Quote::IsInitialized() const {
  return true;
}

void Quotes_Quote::Swap(Quotes_Quote* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Quotes_Quote::InternalSwap(Quotes_Quote* other) {
  using std::swap;
  swap(price_, other->price_);
  swap(volume_, other->volume_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Quotes_Quote::GetMetadata() const {
  protobuf_quotes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_quotes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Quotes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Quotes::kQuoteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Quotes::Quotes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_quotes_2eproto::scc_info_Quotes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:quotes.Quotes)
}
Quotes::Quotes(const Quotes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      quote_(from.quote_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:quotes.Quotes)
}

void Quotes::SharedCtor() {
}

Quotes::~Quotes() {
  // @@protoc_insertion_point(destructor:quotes.Quotes)
  SharedDtor();
}

void Quotes::SharedDtor() {
}

void Quotes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Quotes::descriptor() {
  ::protobuf_quotes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_quotes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Quotes& Quotes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_quotes_2eproto::scc_info_Quotes.base);
  return *internal_default_instance();
}


void Quotes::Clear() {
// @@protoc_insertion_point(message_clear_start:quotes.Quotes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quote_.Clear();
  _internal_metadata_.Clear();
}

bool Quotes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:quotes.Quotes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .quotes.Quotes.Quote quote = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_quote()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:quotes.Quotes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:quotes.Quotes)
  return false;
#undef DO_
}

void Quotes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:quotes.Quotes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .quotes.Quotes.Quote quote = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quote_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->quote(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:quotes.Quotes)
}

::google::protobuf::uint8* Quotes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:quotes.Quotes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .quotes.Quotes.Quote quote = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quote_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->quote(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:quotes.Quotes)
  return target;
}

size_t Quotes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:quotes.Quotes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .quotes.Quotes.Quote quote = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->quote_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->quote(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Quotes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:quotes.Quotes)
  GOOGLE_DCHECK_NE(&from, this);
  const Quotes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Quotes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:quotes.Quotes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:quotes.Quotes)
    MergeFrom(*source);
  }
}

void Quotes::MergeFrom(const Quotes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:quotes.Quotes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  quote_.MergeFrom(from.quote_);
}

void Quotes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:quotes.Quotes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Quotes::CopyFrom(const Quotes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:quotes.Quotes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Quotes::IsInitialized() const {
  return true;
}

void Quotes::Swap(Quotes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Quotes::InternalSwap(Quotes* other) {
  using std::swap;
  CastToBase(&quote_)->InternalSwap(CastToBase(&other->quote_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Quotes::GetMetadata() const {
  protobuf_quotes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_quotes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace quotes
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::quotes::Quotes_Quote* Arena::CreateMaybeMessage< ::quotes::Quotes_Quote >(Arena* arena) {
  return Arena::CreateInternal< ::quotes::Quotes_Quote >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::quotes::Quotes* Arena::CreateMaybeMessage< ::quotes::Quotes >(Arena* arena) {
  return Arena::CreateInternal< ::quotes::Quotes >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
